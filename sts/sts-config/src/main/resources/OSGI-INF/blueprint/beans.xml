<!--
  #%L
  STS :: Config
  %%
  Copyright (c) 2006-2021 Talend Inc. - www.talend.com
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<blueprint
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cxf="http://cxf.apache.org/blueprint/core"
    xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://www.osgi.org/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.xsd
        http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
        http://cxf.apache.org/blueprint/jaxws http://cxf.apache.org/schemas/blueprint/jaxws.xsd
        http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd">

    <cxf:bus name="cxf" />

    <bean id="utSTSProviderBean"
        class="org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider">
        <property name="issueOperation" ref="utIssueDelegate"/>
        <property name="validateOperation" ref="utValidateDelegate"/>
    </bean>

    <bean id="stsConfigurator" class="org.talend.esb.sts.config.StsConfigurator" init-method="init">
        <argument ref="cxf"/>
         <property name="useMessageLogging" value="$sts{useMessageLogging}" />
    </bean>

    <bean id="utIssueDelegate"
        class="org.apache.cxf.sts.operation.TokenIssueOperation">
        <property name="tokenProviders"><list><ref component-id="utSamlTokenProvider"/></list></property>
        <property name="tokenValidators"><list><ref component-id="utSamlTokenValidator"/></list></property>
        <property name="services"><list><ref component-id="utService"/></list></property>
        <property name="stsProperties" ref="utSTSProperties"/>
        <property name="delegationHandlers">
            <list>
                <bean class="org.apache.cxf.sts.token.delegation.HOKDelegationHandler" >
                    <property name="checkAudienceRestriction" value="false"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="utValidateDelegate"
        class="org.apache.cxf.sts.operation.TokenValidateOperation">
        <property name="tokenValidators"><list><ref component-id="utSamlTokenValidator"/></list></property>
        <property name="stsProperties" ref="utSTSProperties"/>
    </bean>

    <bean id="utSamlTokenProvider" class="org.apache.cxf.sts.token.provider.SAMLTokenProvider">
        <property name="conditionsProvider" ref="utSamlConditionsProvider"/>
    </bean>

    <bean id="utSamlConditionsProvider" class="org.apache.cxf.sts.token.provider.DefaultConditionsProvider">
        <property name="lifetime" value="$sts{samlTokenLifetime}"/>
    </bean>

    <bean id="utSamlTokenValidator"
        class="org.apache.cxf.sts.token.validator.SAMLTokenValidator">
    </bean>

    <bean id="utService"
        class="org.apache.cxf.sts.service.StaticService">
        <property name="endpoints">
            <list>
                <value>.*</value>
            </list>
        </property>
    </bean>

    <!-- placeholder configurer -->
    <cm:property-placeholder persistent-id="org.talend.esb.sts.server" placeholder-prefix="$sts{" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="stsServiceUrl" value="/SecurityTokenService/UT"/>
            <cm:property name="stsX509ServiceUrl" value="/SecurityTokenService/X509"/>
            <cm:property name="jaasContext" value="karaf"/>
            <cm:property name="signatureProperties" value="file:./etc/keystores/stsKeystore.properties"/>
            <cm:property name="signatureUsername" value="mystskey"/>
            <cm:property name="bspCompliant" value="false"/>
            <cm:property name="samlTokenLifetime" value="1800"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="cryptoPropertiesFactory" class="org.talend.cxf.crypto.config.CryptoPropertiesFactory">
        <property name="defaultProperties">
            <map>
                <entry key="org.apache.wss4j.crypto.provider" value="org.apache.wss4j.common.crypto.Merlin"/>
                <entry key="org.apache.wss4j.crypto.merlin.keystore.type" value="jks"/>
                <entry key="org.apache.wss4j.crypto.merlin.keystore.password" value=""/>
                <entry key="org.apache.wss4j.crypto.merlin.keystore.alias" value="mystskey"/>
                <entry key="org.apache.wss4j.crypto.merlin.keystore.file" value="./etc/keystores/stsstore.jks"/>
            </map>
        </property>
        <property name="propertiesSource" value="$sts{signatureProperties}"/>
        <property name="updatedProperties">
            <cm:cm-properties persistent-id="org.talend.esb.sts.keystore"/>
        </property>
    </bean>

    <bean id="cryptoProperties" factory-ref="cryptoPropertiesFactory" factory-method="createProperties"/>

    <bean id="utSTSProperties"
         class="org.apache.cxf.sts.StaticSTSProperties" >
        <property name="signatureCryptoProperties" ref="cryptoProperties"/>
        <property name="signatureUsername" value="$sts{signatureUsername}"/>
        <property name="callbackHandlerClass" value="org.talend.esb.sts.callback.PasswordCallbackHandler"/>
        <!--property name="encryptionCryptoProperties" value="$sts{encryptionProperties}"/>
        <property name="encryptionUsername" value="$sts{encryptionUsername}"/-->
        <property name="issuer" value="TalendESB_STSIssuer"/>
    </bean>

    <bean class="org.apache.wss4j.dom.validate.JAASUsernameTokenValidator" id="jaasUTValidator">
        <property name="contextName" value="$sts{jaasContext}" />
    </bean>

    <jaxws:endpoint id="UTSTS"
        implementor="#utSTSProviderBean"
        address="$sts{stsServiceUrl}"
        wsdlLocation="ws-trust-1.4-service.wsdl"
        xmlns:ns1="http://docs.oasis-open.org/ws-sx/ws-trust/200512/"
        serviceName="ns1:SecurityTokenService"
        endpointName="ns1:UT_Port">
        <jaxws:properties>
            <entry key="ws-security.ut.validator" value-ref="jaasUTValidator" />
        </jaxws:properties>
    </jaxws:endpoint>

    <jaxws:endpoint id="X509STS"
        implementor="#utSTSProviderBean"
        address="$sts{stsX509ServiceUrl}"
        wsdlLocation="ws-trust-1.4-service.wsdl"
        xmlns:ns1="http://docs.oasis-open.org/ws-sx/ws-trust/200512/"
        serviceName="ns1:SecurityTokenService"
        endpointName="ns1:X509_Port">
        <jaxws:properties>
            <entry key="security.signature.username" value="$sts{signatureUsername}"/>
            <entry key="security.callback-handler" value="org.talend.esb.sts.callback.PasswordCallbackHandler"/>
            <entry key="security.signature.properties" value-ref="cryptoProperties"/>
            <entry key="security.encryption.username" value="useReqSigCert" />
            <!-- Below needs to be set to non-default value of false for Metro clients -->
            <entry key="ws-security.is-bsp-compliant" value="$sts{bspCompliant}"/>
        </jaxws:properties>
    </jaxws:endpoint>

</blueprint>
