###
# #%L
# TESB :: Assembly
# %%
# Copyright (c) 2006-2021 Talend Inc. - www.talend.com
# %%
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# #L%
###

# Configured zookeeper endpoints (divided by a comma if several instances uses).
# The service locator client will one by one pick an endpoint to connect to the service locator until a connection is established.
locator.endpoints=localhost:2181

# Endpoint prefix property is needed because we run services in a container where the endpoints is only relative to the conatiner.
endpoint.http.prefix=http://localhost:8040/services
endpoint.https.prefix=https://localhost:9001/services

# The default selection strategy (container level) for all the consumer endpoints
locator.strategy=defaultSelectionStrategy
# After this number of calls  the list of available addresses will be reloaded
# only for evenDistributionSelectionStrategy and randomSelectionStrategy
locator.reloadAddressesCount=10

# Specifies the time (ms) the Service Locator client waits for a connection to get established
connection.timeout=20000
# Specifies the timeout period (ms) of the session established with the server
session.timeout=20000

# Authentication properties for the service locator client.
# Uncomment to make it able to communicate with a secured locator server
#authentication.name=${env:TESB_LOCATOR_AUTHENTICATION_USERNAME:-${TESB_LOCATOR_AUTHENTICATION_USERNAME:-tesb}}
#authentication.password=${env:TESB_LOCATOR_AUTHENTICATION_PASSWORD:-${TESB_LOCATOR_AUTHENTICATION_PASSWORD}}

# If 'true' and one of the services (SOAP/REST) is installed
# then locator will perform checks on endpoints
# with expired time-to-live and remove them.
locator.endpoints.timetolive.check=true

# Interval for checks in seconds.
locator.endpoints.timetolive.interval=300

