<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
    license agreements. See the NOTICE file distributed with this work for additional
    information regarding copyright ownership. The ASF licenses this file to
    You under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of
    the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
    by applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied. See the License for the specific
    language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:library="http://services.talend.org/demos/Library/1.0"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
">

    <!-- Define a cxf endpoint based on client stub generated from a wsdl. It
        is important to provide serviceName and endpointName so the wsdl is not needed
        at runtime. As far as I know the serviceName and endpointName do not have
        to have a special convention but it is good practice to use the service namespace
        and Service Interface name in the names -->

    <import resource="classpath:META-INF/cxf/cxf.xml" />

    <!-- for spring SAM definition (without using samenabling policy) -->
    <!-- <import resource="classpath:/META-INF/tesb/agent-context.xml" /> -->

    <jaxws:client id="libraryHttp" serviceName="library:LibraryProvider"
        endpointName="library:LibraryHttpPort"
        address="http://localhost:18888/tesb-library-tutorial/services/LibraryHttpPort"
        serviceClass="org.talend.services.demos.library._1_0.Library">
        <jaxws:features>
            <bean class="org.apache.cxf.ws.addressing.WSAddressingFeature" />
            <!-- for spring SAM definition (without using samenabling policy) -->
            <!-- <ref bean="eventFeature"/> -->
        </jaxws:features>
        <jaxws:properties>
            <entry key="use.service.registry" value="$sr-config{use.service.registry}" />
            <entry key="security.signature.properties" value="keys/clientKeystore.properties" />
            <entry key="security.callback-handler">
                <bean class="org.talend.services.demos.common.ClientCallbackHandler" />
            </entry>
            <entry key="security.sts.client">
                <bean class="org.apache.cxf.ws.security.trust.STSClient">
                    <constructor-arg ref="cxf" />
                    <property name="wsdlLocation"
                        value="http://localhost:8040/services/SecurityTokenService/UT?wsdl" />
                    <property name="serviceName"
                        value="{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}SecurityTokenService" />
                    <property name="endpointName"
                        value="{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}UT_Port" />
                    <property name="properties">
                        <map>
                            <entry key="security.username" value="tadmin" />
                            <entry key="security.callback-handler">
                                <bean class="org.talend.services.demos.common.ClientCallbackHandler" />
                            </entry>
                            <entry key="security.encryption.properties" value="keys/clientKeystore.properties" />
                            <entry key="security.encryption.username" value="mystskey" />
                            <entry key="security.sts.token.usecert" value="true" />
                            <entry key="security.sts.token.username" value="myclientkey" />
                            <entry key="security.sts.token.properties" value="keys/clientKeystore.properties" />
                            <entry key="isBSPCompliant" value="false" />
                        </map>
                    </property>
                </bean>
            </entry>
        </jaxws:properties>
    </jaxws:client>



    <bean id="tester" class="org.talend.services.demos.client.LibraryTester">
        <property name="libraryHttp" ref="libraryHttp"></property>
        <property name="libraryJms" ref="libraryJms"></property>
    </bean>


    <bean id="endpointConfig" class="org.talend.esb.mep.requestcallback.beans.JmsUriFactory">
        <property name="serviceName" value="LibraryConsumer" />
    </bean>

    <context:property-placeholder location="classpath*:callback-endpoint.properties"
        ignore-resource-not-found="true" ignore-unresolvable="true" />

    <jaxws:endpoint xmlns:library="http://services.talend.org/demos/Library/1.0"
        id="LibraryConsumerJMS" address="${callback.endpoint.address}"
        serviceName="library:LibraryConsumer" endpointName="library:LibraryConsumerPort"
        implementor="org.talend.services.demos.client.LibraryConsumerImpl">
        <jaxws:features>
            <bean
                class="org.talend.esb.mep.requestcallback.feature.RequestCallbackFeature" />
            <!-- for spring SAM definition (without using samenabling policy) -->
            <!-- <ref bean="eventFeature"/> -->
        </jaxws:features>
        <jaxws:properties>
            <entry key="use.service.registry" value="$sr-config{use.service.registry}" />
            <entry key="jaxws.provider.interpretNullAsOneway" value="true" />
            <entry key="security.signature.properties" value="keys/serviceKeystore.properties" />
            <entry key="security.callback-handler">
                <bean class="org.talend.services.demos.common.ServiceCallbackHandler" />
            </entry>
        </jaxws:properties>
    </jaxws:endpoint>


    <jaxws:client id="libraryJms" serviceName="library:LibraryProvider"
        endpointName="library:LibraryJmsPort"
        address="jms:jndi:dynamicQueues/library.queue?jndiInitialContextFactory=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;jndiConnectionFactoryName=ConnectionFactory&amp;jndiURL=tcp://localhost:61616&amp;username=tesb&amp;password=tesb"
        serviceClass="org.talend.services.demos.library._1_0.Library">

        <jaxws:features>
            <bean
                class="org.talend.esb.mep.requestcallback.feature.RequestCallbackFeature" />
            <!-- for spring SAM definition (without using samenabling policy) -->
            <!-- <ref bean="eventFeature"/> -->
        </jaxws:features>
        <jaxws:properties>
            <entry key="use.service.registry" value="$sr-config{use.service.registry}" />
            <entry key="security.sts.applies-to" value="{http://services.talend.org/demos/Library/1.0}LibraryProvider" />
            <entry key="org.talend.esb.mep.requestcallback.CallbackEndpoint">
                <ref bean="LibraryConsumerJMS" />
            </entry>
            <entry key="security.signature.properties" value="keys/clientKeystore.properties" />
            <entry key="security.callback-handler">
                <bean class="org.talend.services.demos.common.ClientCallbackHandler" />
            </entry>
            <entry key="security.sts.client">
                <bean class="org.apache.cxf.ws.security.trust.STSClient">
                    <constructor-arg ref="cxf" />
                    <property name="wsdlLocation"
                        value="http://localhost:8040/services/SecurityTokenService/UT?wsdl" />
                    <property name="serviceName"
                        value="{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}SecurityTokenService" />
                    <property name="endpointName"
                        value="{http://docs.oasis-open.org/ws-sx/ws-trust/200512/}UT_Port" />
                    <property name="properties">
                        <map>
                            <entry key="security.username" value="tadmin" />
                            <entry key="security.callback-handler">
                                <bean class="org.talend.services.demos.common.ClientCallbackHandler" />
                            </entry>
                            <entry key="security.encryption.properties" value="keys/clientKeystore.properties" />
                            <entry key="security.encryption.username" value="mystskey" />
                            <entry key="security.sts.token.usecert" value="true" />
                            <entry key="security.sts.token.username" value="myclientkey" />
                            <entry key="security.sts.token.properties" value="keys/clientKeystore.properties" />
                            <entry key="isBSPCompliant" value="false" />
                        </map>
                    </property>
                </bean>
            </entry>
        </jaxws:properties>
    </jaxws:client>

    <jaxws:endpoint xmlns:library="http://services.talend.org/demos/Library/1.0"
        id="LibraryNotificationReceiver"
        address="jms:jndi-topic:dynamicTopics/newBooksTopic.topic?jndiInitialContextFactory=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;jndiConnectionFactoryName=ConnectionFactory&amp;jndiURL=tcp://localhost:61616&amp;username=tesb&amp;password=tesb"
        serviceName="library:LibraryProvider" endpointName="library:LibraryTopicPort"
        implementor="org.talend.services.demos.client.LibraryNotificationReceiverImpl">
        <jaxws:features>
            <bean class="org.apache.cxf.ws.addressing.WSAddressingFeature" />
            <!-- for spring SAM definition (without using samenabling policy) -->
            <!-- <ref bean="eventFeature"/> -->
        </jaxws:features>
        <jaxws:properties>
            <entry key="use.service.registry" value="$sr-config{use.service.registry}" />
            <entry key="jaxws.provider.interpretNullAsOneway" value="true" />
            <entry key="security.signature.properties" value="keys/serviceKeystore.properties" />
            <entry key="security.callback-handler">
                <bean class="org.talend.services.demos.common.ServiceCallbackHandler" />
            </entry>
        </jaxws:properties>
    </jaxws:endpoint>

</beans>
